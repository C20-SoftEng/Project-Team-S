plugins {
    id 'application'
    id 'java'
    id 'jacoco'
    id 'com.diffplug.gradle.spotless' version '3.23.1'
}
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
mainClassName = 'edu.wpi.cs3733.c20.teamS.Main'

repositories {
    mavenCentral()
    maven {
        url 'https://apisite.crmyers.dev/maven'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.9'],
            [group: 'io.reactivex.rxjava3', name: 'rxjava', version: '3.0.0'],
            [group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'],
            [group: 'org.apache.derby',name: 'derby', version: '10.14.2.0'],
            [group: 'com.google.guava', name: 'guava', version: '28.2-jre'],
            [group: 'no.tornado', name: 'tornadofx-controls', version: '1.0.4'],
            [group: 'org.simplejavamail', name: 'simple-java-mail', version: '4.1.1'],
            [group: 'com.google.code.gson', name: 'gson', version: '2.8.6'],
            [group: 'javax.mail', name: 'mail', version: '1.4.1'],
            [group: 'edu.wpi.cs3733.d18.teamG', name: 'FoodRequest', version:'1.0.0'],
            [group: 'org.twitter4j', name: 'twitter4j-core', version: '4.0.1'],
            [group: 'com.github.dvdme', name: 'ForecastIOLib', version: '1.5.2'],
            [group: 'edu.wpi.cs3733.c20.teamS', name: 'GiftRequest', version:'1.0.2'],
            [group: 'com.fazecast', name: 'jSerialComm', version:'2.6.0'],
            [group: 'com.neuronrobotics', name: 'nrjavaserial', version: '3.7.5.1'],
            [group: 'edu.wpi.cs3733.c20.teamS', name: 'GiftRequest', version:'1.0.2'],
            [group: 'edu.wpi.cs3733.c20.teamR', name: 'AppointmentRequest', version:'1.6.9'],
            [group: 'edu.wpi.cs3733.c20.teamU', name: 'FlowerRequestS', version:'1.0.1'],
            [group: 'edu.wpi.cs3733.c20.teamV', name: 'TeamVInterpreterRequest', version:'1.1.0'],
            [group: 'edu.wpi.cs3733.c20.teamT', name: 'ReligiousServiceAPI', version:'1.0.1'],
            [group: 'io.github.typhon0', name: 'AnimateFX', version: '1.2.0']
    )

    compileOnly(
            [group: 'org.projectlombok', name: 'lombok', version: '1.18.8']
    )

    annotationProcessor(
            [group: 'org.projectlombok', name: 'lombok', version: '1.18.8']
    )

    testImplementation(
            [group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.6.0'],
            [group: 'org.testfx', name: 'testfx-junit5', version: '4.0.16-alpha'],
            [group: 'com.jfoenix', name: 'jfoenix', version: '8.0.9']
    )
    testRuntimeOnly(
            [group: 'org.testfx', name: 'openjfx-monocle', version: '8u76-b04']
    )
}

test {
    useJUnitPlatform()
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : false}"
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacoco {
    toolVersion = "0.8.4"
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            excludes = [
                    'edu.wpi.teamname.App',
                    'edu.wpi.teamname.Main'
            ]
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = [
                    'edu.wpi.teamname.App',
                    'edu.wpi.teamname.Main'
            ]
        }

        rule {
            element = 'CLASS'
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.25
            }
            excludes = [
                    'edu.wpi.teamname.App',
                    'edu.wpi.teamname.Main'
            ]
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
jacocoTestCoverageVerification.dependsOn jacocoTestReport

// uncomment to enable spotless checking
//spotless {
//    java {
//        googleJavaFormat()
//    }
//}
